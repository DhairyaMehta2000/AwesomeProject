{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Shimmer = _interopRequireDefault(require(\"./Shimmer\"));\nvar _DataFetcher = _interopRequireDefault(require(\"./DataFetcher\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\mehta\\\\Desktop\\\\AwesomeProject\\\\App.js\";\nvar App = function App() {\n  return (0, _jsxRuntime.jsx)(_reactNative.View, {\n    style: styles.container,\n    children: (0, _jsxRuntime.jsx)(_DataFetcher.default, {\n      children: function children(_ref) {\n        var data = _ref.data,\n          isLoading = _ref.isLoading,\n          fetchData = _ref.fetchData;\n        return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n          children: [(0, _jsxRuntime.jsx)(_reactNative.Button, {\n            title: \"Search\",\n            onPress: fetchData\n          }), (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {\n            children: isLoading ? Array.from({\n              length: 10\n            }).map(function (_, index) {\n              return (0, _jsxRuntime.jsx)(_Shimmer.default, {}, index);\n            }) : data.map(function (item) {\n              return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                style: styles.card,\n                children: [(0, _jsxRuntime.jsx)(_reactNative.Image, {\n                  source: {\n                    uri: item.urls.regular\n                  },\n                  style: styles.cardImage\n                }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: styles.cardTitle,\n                  children: item.alt_description\n                }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {\n                  style: styles.cardAuthor,\n                  children: [\"By: \", item.user.username]\n                }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {\n                  style: styles.cardLikes,\n                  children: [\"Likes: \", item.likes]\n                })]\n              }, item.id);\n            })\n          })]\n        });\n      }\n    })\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 40\n  },\n  card: {\n    backgroundColor: '#fff',\n    marginBottom: 16,\n    padding: 16,\n    borderRadius: 8,\n    elevation: 2\n  },\n  cardImage: {\n    width: '100%',\n    height: 200,\n    marginBottom: 8,\n    borderRadius: 8\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8\n  }\n});\nvar _default = App;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_Shimmer","_DataFetcher","_jsxRuntime","_this","_jsxFileName","App","jsx","View","style","styles","container","children","default","_ref","data","isLoading","fetchData","jsxs","Fragment","Button","title","onPress","ScrollView","Array","from","length","map","_","index","item","card","Image","source","uri","urls","regular","cardImage","Text","cardTitle","alt_description","cardAuthor","user","username","cardLikes","likes","id","StyleSheet","create","flex","padding","paddingTop","backgroundColor","marginBottom","borderRadius","elevation","width","height","fontSize","fontWeight","_default","exports"],"sources":["C:/Users/mehta/Desktop/AwesomeProject/App.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Button, ScrollView, StyleSheet, Text, Image } from 'react-native';\r\nimport ShimmerCard from './Shimmer';\r\nimport DataFetcher from './DataFetcher';\r\n\r\nconst App = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <DataFetcher>\r\n        {({ data, isLoading, fetchData }) => (\r\n          <>\r\n            <Button title=\"Search\" onPress={fetchData} />\r\n            <ScrollView>\r\n              {isLoading\r\n                ? Array.from({ length: 10 }).map((_, index) => (\r\n                    <ShimmerCard key={index} />\r\n                  ))\r\n                : data.map((item) => (\r\n                    <View key={item.id} style={styles.card}>\r\n                      <Image source={{ uri: item.urls.regular }} style={styles.cardImage} />\r\n                      <Text style={styles.cardTitle}>{item.alt_description}</Text>\r\n                      <Text style={styles.cardAuthor}>By: {item.user.username}</Text>\r\n                      <Text style={styles.cardLikes}>Likes: {item.likes}</Text>\r\n                    </View>\r\n                  ))}\r\n            </ScrollView>\r\n          </>\r\n        )}\r\n      </DataFetcher>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    paddingTop: 40,\r\n  },\r\n  card: {\r\n    backgroundColor: '#fff',\r\n    marginBottom: 16,\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    elevation: 2,\r\n  },\r\n  cardImage: {\r\n    width: '100%',\r\n    height: 200, // Set the image height\r\n    marginBottom: 8,\r\n    borderRadius: 8,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n});\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}